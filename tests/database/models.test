<?php

/** @noinspection PhpIllegalPsrClassPathInspection */

namespace Tests\database;

use Illuminate\Database\Eloquent\Model;

class Person extends Model
{
    protected $table = 'persons';

    public function addresses()
    {
        return $this->hasMany(Address::class);
    }

    public function tasks()
    {
        return $this->hasMany(Task::class, 'owner_id');
    }

    public function tasksFollowed()
    {
        return $this->belongsToMany(Task::class, 'task_follower');
    }

    public function comments()
    {
        return $this->hasMany(Comment::class, 'owner_id');
    }
}

class Tag extends Model
{
    protected $table = 'tag';

    public function tasks()
    {
        return $this->morphedByMany(Task::class, 'taggable');
    }

    public function addresses()
    {
        return $this->morphedByMany(Address::class, 'taggable');
    }
}

class Country extends Model
{
    protected $table = 'country';

    public function administrativeDivisions()
    {
        return $this->hasMany(AdministrativeDivision::class);
    }

    public function locations()
    {
        return $this->hasManyThrough(Location::class, AdministrativeDivision::class);
    }

    public function addresses()
    {
        return $this->hasMany(Address::class);
    }
}

class AdministrativeDivision extends Model
{
    protected $table = 'administrative_division';

    public function country()
    {
        return $this->belongsTo(Country::class);
    }

    public function administrativeDivision()
    {
        return $this->belongsTo(AdministrativeDivision::class);
    }

    public function administrativeDivisions()
    {
        return $this->hasMany(AdministrativeDivision::class);
    }

    public function locations()
    {
        return $this->hasMany(Location::class);
    }
}

class Location extends Model
{
    protected $table = 'location';

    public function administrativeDivision()
    {
        return $this->belongsTo(AdministrativeDivision::class);
    }

    public function addresses()
    {
        return $this->hasMany(Address::class);
    }
}

class Address extends Model
{
    public function person()
    {
        return $this->belongsTo(Person::class);
    }

    public function country()
    {
        return $this->belongsTo(Country::class);
    }

    public function location()
    {
        return $this->belongsTo(Location::class);
    }

    public function tags()
    {
        return $this->morphToMany(Tag::class, 'taggable', 'taggable');
    }
}

class Task extends Model
{
    public function owner()
    {
        return $this->belongsTo(Person::class, 'owner_id');
    }

    public function followers()
    {
        return $this->belongsToMany(Person::class, 'task_follower');
    }

    public function comments()
    {
        return $this->hasMany(Comment::class);
    }

    public function attachments()
    {
        return $this->morphMany(Attachment::class, 'owner');
    }

    public function tags()
    {
        return $this->morphToMany(Tag::class, 'taggable', 'taggable');
    }
}

class Comment extends Model
{
    public function owner()
    {
        return $this->belongsTo(Person::class, 'owner_id');
    }

    public function task()
    {
        return $this->belongsTo(Task::class);
    }

    public function attachments()
    {
        return $this->morphMany(Attachment::class, 'owner');
    }
}

class Attachment extends Model
{
    public function owner()
    {
        return $this->morphTo();
    }
}
